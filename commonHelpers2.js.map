{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["//У JS напиши скрипт, який буде зберігати значення полів у локальне сховище, коли користувач щось друкує.\n\nconst feedbackFormEl = document.querySelector('.feedback-form');\nlet formData = { email: \"\", message: \"\" };\n\nconst FormFieldsFill = () => {\n  const DataFromLocalS = JSON.parse(localStorage.getItem('feedback-form-state'));\n\n  if (DataFromLocalS === null) {\n    return;\n  }\n\n  formData = DataFromLocalS;\n\n  for (const key in DataFromLocalS) {\n    if (DataFromLocalS.hasOwnProperty(key)) {\n        feedbackFormEl.elements[key].value = DataFromLocalS[key];\n    }\n  }\n};\n\nFormFieldsFill();\n\nconst onFormFieldInput = event => {\n  const fieldName = event.target.name;\n  const fieldValue = event.target.value;\n\n  formData[fieldName] = fieldValue;\n\n  localStorage.setItem('feedback-form-state', JSON.stringify(formData));\n};\n\nconst onFeedbackFormSubmit = event => {\n \n  event.preventDefault(); \n\n  const fields = feedbackFormEl.elements;\n  let allFieldsFilled = true;\n\n  for (let i = 0; i < fields.length; i++) {\n    const field = fields[i];\n\n      if ((field.tagName === 'INPUT' || field.tagName === 'TEXTAREA') && !field.value.trim()) {\n        allFieldsFilled = false;\n    }; \n  }\n\n  //або без перебору, просто по іменам\n  // if (!feedbackFormEl.email.value.trim() || !feedbackFormEl.message.value.trim()) {\n  //    allFieldsFilled = false;\n  //  }\n\n\n  if (!allFieldsFilled) {\n    alert('Please fill in all fields.');\n  } else {\n    console.log(formData);\n    formData = {};\n    event.target.reset();\n    localStorage.removeItem('feedback-form-state');  \n  };\n\n \n//old code\n  //  const fields = feedbackFormEl.querySelectorAll('input, textarea');\n  //   let allFieldsFilled = true;\n    \n  //   fields.forEach((field)=> {\n  //   if (!field.value.trim()) {\n  //     allFieldsFilled = false;\n  //     } \n  //  });\n \n  // if (!allFieldsFilled) {\n  //   // event.preventDefault(); \n  //   alert('Please fill in all fields.');\n  //   }\n  // else {\n  //   event.target.reset();\n  //   localStorage.removeItem('feedback-form-state');  \n  //   };\n\n};\n\nfeedbackFormEl.addEventListener('input', onFormFieldInput);\nfeedbackFormEl.addEventListener('submit', onFeedbackFormSubmit);"],"names":["feedbackFormEl","formData","FormFieldsFill","DataFromLocalS","key","onFormFieldInput","event","fieldName","fieldValue","onFeedbackFormSubmit","fields","allFieldsFilled","i","field"],"mappings":"wFAEA,MAAMA,EAAiB,SAAS,cAAc,gBAAgB,EAC9D,IAAIC,EAAW,CAAE,MAAO,GAAI,QAAS,EAAE,EAEvC,MAAMC,EAAiB,IAAM,CAC3B,MAAMC,EAAiB,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAC,EAE7E,GAAIA,IAAmB,KAIvB,CAAAF,EAAWE,EAEX,UAAWC,KAAOD,EACZA,EAAe,eAAeC,CAAG,IACjCJ,EAAe,SAASI,CAAG,EAAE,MAAQD,EAAeC,CAAG,GAG/D,EAEAF,IAEA,MAAMG,EAAmBC,GAAS,CAChC,MAAMC,EAAYD,EAAM,OAAO,KACzBE,EAAaF,EAAM,OAAO,MAEhCL,EAASM,CAAS,EAAIC,EAEtB,aAAa,QAAQ,sBAAuB,KAAK,UAAUP,CAAQ,CAAC,CACtE,EAEMQ,EAAuBH,GAAS,CAEpCA,EAAM,eAAc,EAEpB,MAAMI,EAASV,EAAe,SAC9B,IAAIW,EAAkB,GAEtB,QAASC,EAAI,EAAGA,EAAIF,EAAO,OAAQE,IAAK,CACtC,MAAMC,EAAQH,EAAOE,CAAC,GAEfC,EAAM,UAAY,SAAWA,EAAM,UAAY,aAAe,CAACA,EAAM,MAAM,KAAI,IAClFF,EAAkB,GAEvB,CAQIA,GAGH,QAAQ,IAAIV,CAAQ,EACpBA,EAAW,CAAA,EACXK,EAAM,OAAO,QACb,aAAa,WAAW,qBAAqB,GAL7C,MAAM,4BAA4B,CA4BtC,EAEAN,EAAe,iBAAiB,QAASK,CAAgB,EACzDL,EAAe,iBAAiB,SAAUS,CAAoB"}